<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Monitoring on Kishan&#39;s World</title>
    <link>http://kishansharma.in/categories/monitoring/</link>
    <description>Recent content in Monitoring on Kishan&#39;s World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Apr 2023 01:26:36 +0530</lastBuildDate><atom:link href="http://kishansharma.in/categories/monitoring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes Prometheus Monitoring</title>
      <link>http://kishansharma.in/posts/kubernetes-prometheus-monitoring/</link>
      <pubDate>Tue, 25 Apr 2023 01:26:36 +0530</pubDate>
      
      <guid>http://kishansharma.in/posts/kubernetes-prometheus-monitoring/</guid>
      <description>Using Prometheus to monitor kubernetes cluster</description>
      <content:encoded><![CDATA[<h2 id="monitoring-kubernetes-cluster-with-prometheus">Monitoring Kubernetes cluster with Prometheus</h2>
<p>Prometheus is a widely used open-source monitoring system that is commonly used for monitoring Kubernetes environments. In Kubernetes, Prometheus can be used to monitor various Kubernetes components such as pods, nodes, and services. Kubernetes provides an API that allows Prometheus to discover the endpoints of the different components and collect metrics from them. These metrics can include CPU usage, memory usage, network traffic, and other relevant information. Prometheus also provides a variety of built-in visualization tools such as Grafana, which can be used to visualize the collected metrics. This allows users to create dashboards that provide a high-level view of the cluster&rsquo;s health and performance.</p>
<p>There are fundamentally two things that we can monitor in kubernetes system</p>
<ul>
<li>Monitor applications running on kubernetes infrastructure</li>
<li>Monitor kubernetes cluster
<ul>
<li>control plane components such as coreDNS, apiserver, kube scheduler</li>
<li>kubelet(cAdvisor) which exposes container metrics</li>
<li>kube-state-metrics which is basically the cluster level metrics around deployments, pod etc</li>
<li>node-exporter which runs on all the nodes and exposes metrics around CPU, memory, network. Node exporter can be run on a kubernetes cluster in the following ways
<ul>
<li>manually run in each nodes in the cluster</li>
<li>use kubernetes daemonset which allows to run pod of node-exporter in all the nodes in the cluster</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Kubernetes doesn’t expose these metrics by default. For that we need to install kube state metrics container into our kubernetes environment and this container is responsible for making it available to the prometheus server.</p>
<h2 id="deploying-prometheus">Deploying Prometheus</h2>
<p>There are multiple options to deploy prometheus.</p>
<ol>
<li>Manually deploy premotheus on kubernetes. this requires manually creating all the deployments, configmaps, services secrets etc.</li>
<li>Deploy using Helm chart to deploy prometheus operator</li>
</ol>
<h2 id="operators-in-kubernetes">Operators in Kubernetes</h2>
<p>A kubernetes operator is a method of packaging, deploying and managing a kubernetes application. A Kubernetes operator is an application-specific controller that extends the functionality of the Kubernetes API to create, configure, and manage instances of complex applications on behalf of a Kubernetes user.</p>
<h2 id="prometheus-operatorhttpsgithubcomprometheus-operatorprometheus-operator"><a href="https://github.com/prometheus-operator/prometheus-operator">Prometheus operator</a></h2>
<p>The Prometheus Operator provides Kubernetes native deployment and management of Prometheus and related monitoring components.
The Prometheus operator includes the following features:</p>
<ul>
<li><strong>Kubernetes Custom Resources</strong>: Use Kubernetes custom resources to deploy and manage Prometheus, AlertManager, and related components.</li>
<li><strong>Simplified Deployment Configuration</strong>: Configure the fundamentals of Prometheus like versions, persistence, retention policies, and replicas from a native Kubernetes resource.</li>
<li><strong>Prometheus Target Configuration</strong>: Automatically generate monitoring target configurations based on familiar Kubernetes label queries; no need to learn a Prometheus specific configuration language.</li>
</ul>
<p><a href="https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/getting-started.md">user guide</a></p>
<p>This operator comes with several resources such as AlertManager, ServiceMonitor, PodMonitor, PrometheusRule, AlertManager config</p>
<h2 id="service-monitors">Service Monitors</h2>
<p>The Prometheus operator comes with several custom resource definitions that provide a high level abstraction for deploying prometheus.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>kubectl get crd
</span></span><span style="display:flex;"><span>servicemonitors.monitoring.coreos.com       2023-04-24T12:28:54Z
</span></span><span style="display:flex;"><span>prometheusrules.monitoring.coreos.com       2023-04-24T12:28:54Z
</span></span></code></pre></div><p><strong>Service monitors</strong> define a set of targets for prometheus to monitor and scrape. They allow you to avoid touching prometheus configs directly and give you a declarative kubernetes syntax to define targets</p>
<blockquote>
<p>Writing and maintaining configuration in prometheus is a pain, that’s why there’s a thing called service monitor. A service monitor tells prometheus what services in kubernetes to monitor so if you have an arbitrary deployment with some pods running behind it and you’re exposing a service to that pod you can create a service monitor that uses a label selector to select the service and then in prometheus you can label the selectors to select the service monitors that prometheus needs to consume that’ll tell prometheus what service endpoints to start scraping to collect metrics.</p>
</blockquote>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#ae81ff">kubectl get servicemonitors.monitoring.coreos.com prometheus-kube-prometheus-prometheus -o yaml</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">apiVersion</span>: <span style="color:#ae81ff">monitoring.coreos.com/v1</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">kind</span>: <span style="color:#ae81ff">ServiceMonitor</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">metadata</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">annotations</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">meta.helm.sh/release-name</span>: <span style="color:#ae81ff">prometheus</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">meta.helm.sh/release-namespace</span>: <span style="color:#ae81ff">default</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">creationTimestamp</span>: <span style="color:#e6db74">&#34;2023-04-24T12:29:25Z&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">generation</span>: <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">labels</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">app</span>: <span style="color:#ae81ff">kube-prometheus-stack-prometheus</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">app.kubernetes.io/instance</span>: <span style="color:#ae81ff">prometheus</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">app.kubernetes.io/managed-by</span>: <span style="color:#ae81ff">Helm</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">app.kubernetes.io/part-of</span>: <span style="color:#ae81ff">kube-prometheus-stack</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">app.kubernetes.io/version</span>: <span style="color:#ae81ff">45.20.0</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">chart</span>: <span style="color:#ae81ff">kube-prometheus-stack-45.20.0</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">heritage</span>: <span style="color:#ae81ff">Helm</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">release</span>: <span style="color:#ae81ff">prometheus</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">name</span>: <span style="color:#ae81ff">prometheus-kube-prometheus-prometheus</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">namespace</span>: <span style="color:#ae81ff">default</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">resourceVersion</span>: <span style="color:#e6db74">&#34;193503&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">uid</span>: <span style="color:#ae81ff">8be1b353-047e-4b9b-ba15-d1a6517cf2cd</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">spec</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">endpoints</span>:
</span></span><span style="display:flex;"><span>  - <span style="color:#f92672">path</span>: <span style="color:#ae81ff">/metrics</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">port</span>: <span style="color:#ae81ff">http-web</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">namespaceSelector</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">matchNames</span>:
</span></span><span style="display:flex;"><span>    - <span style="color:#ae81ff">default</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">selector</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">matchLabels</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">app</span>: <span style="color:#ae81ff">kube-prometheus-stack-prometheus</span>
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">release</span>: <span style="color:#ae81ff">prometheus</span>
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">self-monitor</span>: <span style="color:#e6db74">&#34;true&#34;</span>
</span></span></code></pre></div><h2 id="installing-prometheus-with-helm-charthttpsgithubcomprometheus-communityhelm-chartstreemainchartskube-prometheus-stack"><a href="https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack">Installing Prometheus with Helm chart</a></h2>
<p><a href="https://github.com/prometheus-operator/kube-prometheus">kube-prometheus stack</a> is a collection of Kubernetes manifests, <a href="http://grafana.com/">Grafana</a>
dashboards, and <a href="https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/">Prometheus rules</a> combined with documentation and scripts to provide easy to operate end-to-end Kubernetes cluster monitoring with <a href="https://prometheus.io/">Prometheus</a> using the <a href="https://github.com/prometheus-operator/prometheus-operator">Prometheus Operator</a></p>
<ul>
<li><strong>Get Helm Repository Info</strong></li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
</span></span><span style="display:flex;"><span>helm repo update
</span></span></code></pre></div><ul>
<li><strong>Install Helm Chart</strong></li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>helm install prometheus prometheus-community/kube-prometheus-stack
</span></span></code></pre></div><p>This helm chart creates all the prometheus resources in the cluster</p>
<p>To see what it has created, let’s get all the resources</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>kubectl get all
</span></span><span style="display:flex;"><span>NAME                                                         READY   STATUS    RESTARTS      AGE
</span></span><span style="display:flex;"><span>pod/alertmanager-prometheus-kube-prometheus-alertmanager-0   2/2     Running   <span style="color:#ae81ff">1</span> <span style="color:#f92672">(</span>11m ago<span style="color:#f92672">)</span>   13m
</span></span><span style="display:flex;"><span>pod/prometheus-grafana-6984c5759f-2wmlz                      3/3     Running   <span style="color:#ae81ff">0</span>             14m
</span></span><span style="display:flex;"><span>pod/prometheus-kube-prometheus-operator-5f8db7f79c-j9z9t     1/1     Running   <span style="color:#ae81ff">0</span>             14m
</span></span><span style="display:flex;"><span>pod/prometheus-kube-state-metrics-7fbdd95dc4-nrj49           1/1     Running   <span style="color:#ae81ff">0</span>             14m
</span></span><span style="display:flex;"><span>pod/prometheus-prometheus-kube-prometheus-prometheus-0       2/2     Running   <span style="color:#ae81ff">0</span>             13m
</span></span><span style="display:flex;"><span>pod/prometheus-prometheus-node-exporter-5bzbv                1/1     Running   <span style="color:#ae81ff">0</span>             14m
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>NAME                                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT<span style="color:#f92672">(</span>S<span style="color:#f92672">)</span>                      AGE
</span></span><span style="display:flex;"><span>service/alertmanager-operated                     ClusterIP   None             &lt;none&gt;        9093/TCP,9094/TCP,9094/UDP   13m
</span></span><span style="display:flex;"><span>service/kubernetes                                ClusterIP   10.96.0.1        &lt;none&gt;        443/TCP                      13d
</span></span><span style="display:flex;"><span>service/prometheus-grafana                        ClusterIP   10.96.182.45     &lt;none&gt;        80/TCP                       14m
</span></span><span style="display:flex;"><span>service/prometheus-kube-prometheus-alertmanager   ClusterIP   10.111.178.253   &lt;none&gt;        9093/TCP                     14m
</span></span><span style="display:flex;"><span>service/prometheus-kube-prometheus-operator       ClusterIP   10.107.58.215    &lt;none&gt;        443/TCP                      14m
</span></span><span style="display:flex;"><span>service/prometheus-kube-prometheus-prometheus     ClusterIP   10.100.157.20    &lt;none&gt;        9090/TCP                     14m
</span></span><span style="display:flex;"><span>service/prometheus-kube-state-metrics             ClusterIP   10.102.14.155    &lt;none&gt;        8080/TCP                     14m
</span></span><span style="display:flex;"><span>service/prometheus-operated                       ClusterIP   None             &lt;none&gt;        9090/TCP                     13m
</span></span><span style="display:flex;"><span>service/prometheus-prometheus-node-exporter       ClusterIP   10.96.1.108      &lt;none&gt;        9100/TCP                     14m
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>NAME                                                 DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
</span></span><span style="display:flex;"><span>daemonset.apps/prometheus-prometheus-node-exporter   <span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">1</span>       <span style="color:#ae81ff">1</span>            <span style="color:#ae81ff">1</span>           &lt;none&gt;          14m
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>NAME                                                  READY   UP-TO-DATE   AVAILABLE   AGE
</span></span><span style="display:flex;"><span>deployment.apps/prometheus-grafana                    1/1     <span style="color:#ae81ff">1</span>            <span style="color:#ae81ff">1</span>           14m
</span></span><span style="display:flex;"><span>deployment.apps/prometheus-kube-prometheus-operator   1/1     <span style="color:#ae81ff">1</span>            <span style="color:#ae81ff">1</span>           14m
</span></span><span style="display:flex;"><span>deployment.apps/prometheus-kube-state-metrics         1/1     <span style="color:#ae81ff">1</span>            <span style="color:#ae81ff">1</span>           14m
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>NAME                                                             DESIRED   CURRENT   READY   AGE
</span></span><span style="display:flex;"><span>replicaset.apps/prometheus-grafana-6984c5759f                    <span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">1</span>       14m
</span></span><span style="display:flex;"><span>replicaset.apps/prometheus-kube-prometheus-operator-5f8db7f79c   <span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">1</span>       14m
</span></span><span style="display:flex;"><span>replicaset.apps/prometheus-kube-state-metrics-7fbdd95dc4         <span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">1</span>       14m
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>NAME                                                                    READY   AGE
</span></span><span style="display:flex;"><span>statefulset.apps/alertmanager-prometheus-kube-prometheus-alertmanager   1/1     13m
</span></span><span style="display:flex;"><span>statefulset.apps/prometheus-prometheus-kube-prometheus-prometheus       1/1     13m
</span></span></code></pre></div><h3 id="resources-created">Resources created</h3>
<blockquote>
<p>Let&rsquo;s understand the important resources we have created</p>
</blockquote>
<h4 id="deployments">Deployments</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>kubectl get deployments
</span></span><span style="display:flex;"><span>NAME                                                  READY   UP-TO-DATE   AVAILABLE   AGE
</span></span><span style="display:flex;"><span>deployment.apps/prometheus-grafana                    1/1     <span style="color:#ae81ff">1</span>            <span style="color:#ae81ff">1</span>           14m
</span></span><span style="display:flex;"><span>deployment.apps/prometheus-kube-prometheus-operator   1/1     <span style="color:#ae81ff">1</span>            <span style="color:#ae81ff">1</span>           14m
</span></span><span style="display:flex;"><span>deployment.apps/prometheus-kube-state-metrics         1/1     <span style="color:#ae81ff">1</span>            <span style="color:#ae81ff">1</span>           14m
</span></span></code></pre></div><ul>
<li><strong>Prometheus Grafana:</strong> is a graphical UI tool that is used to visualize the data that is there in the prometheus time series database</li>
<li><strong>Kube prometheus operator</strong>: this is the operator that is going to manage the lifecycle of the prometheus instance. It handles the update of configs, restart the process upon changes in the config</li>
<li><strong>Kube state metrics</strong>: container for exposing cluster level metrics such as deployments, pods, services</li>
</ul>
<h4 id="statefulset">StatefulSet</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>kubectl get statefulset
</span></span><span style="display:flex;"><span>NAME                                                                    READY   AGE
</span></span><span style="display:flex;"><span>statefulset.apps/alertmanager-prometheus-kube-prometheus-alertmanager   1/1     13m
</span></span><span style="display:flex;"><span>statefulset.apps/prometheus-prometheus-kube-prometheus-prometheus       1/1     13m
</span></span></code></pre></div><ul>
<li><strong>Prometheus server</strong>: this is a container that’s running the prometheus process</li>
<li><strong>AlertManager</strong>: alert manager instance</li>
</ul>
<h4 id="daemonset">Daemonset</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>kubectl get daemonset
</span></span><span style="display:flex;"><span>NAME                                                 DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
</span></span><span style="display:flex;"><span>daemonset.apps/prometheus-prometheus-node-exporter   <span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">1</span>         <span style="color:#ae81ff">1</span>       <span style="color:#ae81ff">1</span>            <span style="color:#ae81ff">1</span>           &lt;none&gt;          14m
</span></span></code></pre></div><ul>
<li><strong>Node exporter</strong>: responsible for deploying a node exporter pod on every single node in the cluster and this pod is responsible for collecting host metrics such as CPU utilization, memory utilization and exposes it to prometheus server</li>
</ul>
<h2 id="connecting-to-prometheus-server">Connecting to prometheus server</h2>
<p>The prometheus service is of type clusterIP and can be accessed from within the cluster. To connect to the prometheus server from outside the cluster we can either make the service of type nodeport or load balancer or use an ingress to route traffic to the service.</p>
<p>we can also port forward the prometheus pod to access it locally</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>kubectl port-forward prometheus-prometheus-kube-prometheus-prometheus-0 <span style="color:#ae81ff">9090</span>
</span></span></code></pre></div><h2 id="prometheus-kubernetes-configurationhttpsprometheusiodocsprometheuslatestconfigurationconfigurationkubernetes_sd_config"><a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config">Prometheus kubernetes configuration</a></h2>
<p>Kubernetes SD configurations allow retrieving scrape targets from <a href="https://kubernetes.io/">Kubernetes</a> REST API and always staying synchronized with the cluster state. One of the following role types can be configured to discover targets.</p>
<ul>
<li>role
<ul>
<li>service</li>
<li>node</li>
<li>pod</li>
<li>endpoints</li>
<li>endpointsslice</li>
<li>ingress</li>
</ul>
</li>
</ul>
<blockquote>
<p>The default config uses the role <code>endpoint</code> because the endpoint role discovers targets from listed endpoints of a service and thus we can basically discover pods, services, nodes and everything else using the endpoints</p>
</blockquote>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#f92672">kubernetes_sd_configs</span>:
</span></span><span style="display:flex;"><span>  - <span style="color:#f92672">role</span>: <span style="color:#ae81ff">endpoints</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">kubeconfig_file</span>: <span style="color:#e6db74">&#34;&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">follow_redirects</span>: <span style="color:#66d9ef">true</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">enable_http2</span>: <span style="color:#66d9ef">true</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">namespaces</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">own_namespace</span>: <span style="color:#66d9ef">false</span>
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">names</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">default</span>
</span></span></code></pre></div><h2 id="prometheus-rules">Prometheus Rules</h2>
<p>To add rules, prometheus operator has a CRD called prometheusrule which handles registering new rules to a prometheus instance</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>kubectl get prometheusrules.monitoring.coreos.com
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
